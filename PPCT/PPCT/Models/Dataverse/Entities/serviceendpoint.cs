#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PPCT.Models.Dataverse
{
	
	
	/// <summary>
	/// Authentication type for Service Bus
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum serviceendpoint_authtype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AccessKey = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SASKey = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SASToken = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WebhookKey = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HttpHeader = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HttpQueryString = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ConnectionString = 7,
	}
	
	/// <summary>
	/// Connection mode.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum serviceendpoint_connectionmode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Normal = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Federated = 2,
	}
	
	/// <summary>
	/// Contract type.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum serviceendpoint_contract
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OneWay = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Queue = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Rest = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TwoWay = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Topic = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Queue_Persistent = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EventHub = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Webhook = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EventGrid = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ManagedDataLake = 10,
	}
	
	/// <summary>
	/// Character encoding used for messages sent to a service endpoint
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum serviceendpoint_messagecharset
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Default = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UTF8 = 1,
	}
	
	/// <summary>
	///  Format type.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum serviceendpoint_messageformat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BinaryXML = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Json = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TextXML = 3,
	}
	
	/// <summary>
	/// Format for Service Bus Namespace
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum serviceendpoint_namespaceformat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NamespaceName = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NamespaceAddress = 2,
	}
	
	/// <summary>
	/// Schema type for Event Grid
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum serviceendpoint_schematype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EventGrid = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CloudEvents = 2,
	}
	
	/// <summary>
	/// User claim value type.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum serviceendpoint_userclaim
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		None = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UserId = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UserInfo = 3,
	}
	
	/// <summary>
	/// Service endpoint that can be contacted.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("serviceendpoint")]
	public partial class ServiceEndpoint : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the serviceendpoint entity
		/// </summary>
		public partial class Fields
		{
			public const string AuthType = "authtype";
			public const string AuthValue = "authvalue";
			public const string ComponentState = "componentstate";
			public const string ConnectionMode = "connectionmode";
			public const string Contract = "contract";
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string Description = "description";
			public const string IntroducedVersion = "introducedversion";
			public const string IsAuthValueSet = "isauthvalueset";
			public const string IsCustomizable = "iscustomizable";
			public const string IsManaged = "ismanaged";
			public const string IsSASKeySet = "issaskeyset";
			public const string IsSASTokenSet = "issastokenset";
			public const string KeyVaultReferenceId = "keyvaultreferenceid";
			public const string MessageCharset = "messagecharset";
			public const string MessageFormat = "messageformat";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string Name = "name";
			public const string NamespaceAddress = "namespaceaddress";
			public const string NamespaceFormat = "namespaceformat";
			public const string OrganizationId = "organizationid";
			public const string OverwriteTime = "overwritetime";
			public const string Path = "path";
			public const string RuntimeIntegrationProperties = "runtimeintegrationproperties";
			public const string SASKey = "saskey";
			public const string SASKeyName = "saskeyname";
			public const string SASToken = "sastoken";
			public const string SchemaType = "schematype";
			public const string ServiceEndpointId = "serviceendpointid";
			public const string Id = "serviceendpointid";
			public const string ServiceEndpointIdUnique = "serviceendpointidunique";
			public const string SolutionId = "solutionid";
			public const string SolutionNamespace = "solutionnamespace";
			public const string Url = "url";
			public const string UseKeyVaultConfiguration = "usekeyvaultconfiguration";
			public const string UserClaim = "userclaim";
			public const string serviceendpoint_sdkmessageprocessingstep = "serviceendpoint_sdkmessageprocessingstep";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public ServiceEndpoint() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "serviceendpoint";
		
		public const string EntityLogicalCollectionName = "serviceendpoints";
		
		public const string EntitySetName = "serviceendpoints";
		
		/// <summary>
		/// Specifies mode of authentication with SB
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("authtype")]
		public virtual serviceendpoint_authtype? AuthType
		{
			get
			{
				return ((serviceendpoint_authtype?)(EntityOptionSetEnum.GetEnum(this, "authtype")));
			}
			set
			{
				this.SetAttributeValue("authtype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Authentication Value
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("authvalue")]
		public string AuthValue
		{
			get
			{
				return this.GetAttributeValue<string>("authvalue");
			}
			set
			{
				this.SetAttributeValue("authvalue", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstate")]
		public virtual componentstate? ComponentState
		{
			get
			{
				return ((componentstate?)(EntityOptionSetEnum.GetEnum(this, "componentstate")));
			}
		}
		
		/// <summary>
		/// Connection mode to contact the service endpoint.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("connectionmode")]
		public virtual serviceendpoint_connectionmode? ConnectionMode
		{
			get
			{
				return ((serviceendpoint_connectionmode?)(EntityOptionSetEnum.GetEnum(this, "connectionmode")));
			}
			set
			{
				this.SetAttributeValue("connectionmode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Type of the endpoint contract.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contract")]
		public virtual serviceendpoint_contract? Contract
		{
			get
			{
				return ((serviceendpoint_contract?)(EntityOptionSetEnum.GetEnum(this, "contract")));
			}
			set
			{
				this.SetAttributeValue("contract", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the service endpoint.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the service endpoint was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the service endpoint.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		/// <summary>
		/// Description of the service endpoint.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			set
			{
				this.SetAttributeValue("description", value);
			}
		}
		
		/// <summary>
		/// Version in which the form is introduced.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("introducedversion")]
		public string IntroducedVersion
		{
			get
			{
				return this.GetAttributeValue<string>("introducedversion");
			}
			set
			{
				this.SetAttributeValue("introducedversion", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isauthvalueset")]
		public System.Nullable<bool> IsAuthValueSet
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isauthvalueset");
			}
		}
		
		/// <summary>
		/// Information that specifies whether this component can be customized.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscustomizable")]
		public Microsoft.Xrm.Sdk.BooleanManagedProperty IsCustomizable
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.BooleanManagedProperty>("iscustomizable");
			}
			set
			{
				this.SetAttributeValue("iscustomizable", value);
			}
		}
		
		/// <summary>
		/// Information that specifies whether this component is managed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanaged")]
		public System.Nullable<bool> IsManaged
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismanaged");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("issaskeyset")]
		public System.Nullable<bool> IsSASKeySet
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("issaskeyset");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("issastokenset")]
		public System.Nullable<bool> IsSASTokenSet
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("issastokenset");
			}
		}
		
		/// <summary>
		/// Unique identifier for keyvaultreference associated with serviceendpoint.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("keyvaultreferenceid")]
		public Microsoft.Xrm.Sdk.EntityReference KeyVaultReferenceId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("keyvaultreferenceid");
			}
			set
			{
				this.SetAttributeValue("keyvaultreferenceid", value);
			}
		}
		
		/// <summary>
		/// Specifies the character encoding for message content
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("messagecharset")]
		public virtual serviceendpoint_messagecharset? MessageCharset
		{
			get
			{
				return ((serviceendpoint_messagecharset?)(EntityOptionSetEnum.GetEnum(this, "messagecharset")));
			}
			set
			{
				this.SetAttributeValue("messagecharset", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Content type of the message
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("messageformat")]
		public virtual serviceendpoint_messageformat? MessageFormat
		{
			get
			{
				return ((serviceendpoint_messageformat?)(EntityOptionSetEnum.GetEnum(this, "messageformat")));
			}
			set
			{
				this.SetAttributeValue("messageformat", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who last modified the service endpoint.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the service endpoint was last modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the service endpoint.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		/// <summary>
		/// Name of Service end point.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.SetAttributeValue("name", value);
			}
		}
		
		/// <summary>
		/// Full service endpoint address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("namespaceaddress")]
		public string NamespaceAddress
		{
			get
			{
				return this.GetAttributeValue<string>("namespaceaddress");
			}
			set
			{
				this.SetAttributeValue("namespaceaddress", value);
			}
		}
		
		/// <summary>
		/// Format of Service Bus Namespace
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("namespaceformat")]
		public virtual serviceendpoint_namespaceformat? NamespaceFormat
		{
			get
			{
				return ((serviceendpoint_namespaceformat?)(EntityOptionSetEnum.GetEnum(this, "namespaceformat")));
			}
			set
			{
				this.SetAttributeValue("namespaceformat", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Unique identifier of the organization with which the service endpoint is associated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		public Microsoft.Xrm.Sdk.EntityReference OrganizationId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("organizationid");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overwritetime")]
		public System.Nullable<System.DateTime> OverwriteTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overwritetime");
			}
		}
		
		/// <summary>
		/// Path to the service endpoint.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("path")]
		public string Path
		{
			get
			{
				return this.GetAttributeValue<string>("path");
			}
			set
			{
				this.SetAttributeValue("path", value);
			}
		}
		
		/// <summary>
		/// For internal use only. Holds miscellaneous properties related to runtime integration.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("runtimeintegrationproperties")]
		public string RuntimeIntegrationProperties
		{
			get
			{
				return this.GetAttributeValue<string>("runtimeintegrationproperties");
			}
			set
			{
				this.SetAttributeValue("runtimeintegrationproperties", value);
			}
		}
		
		/// <summary>
		/// Shared Access Key
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("saskey")]
		public string SASKey
		{
			get
			{
				return this.GetAttributeValue<string>("saskey");
			}
			set
			{
				this.SetAttributeValue("saskey", value);
			}
		}
		
		/// <summary>
		/// Shared Access Key Name
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("saskeyname")]
		public string SASKeyName
		{
			get
			{
				return this.GetAttributeValue<string>("saskeyname");
			}
			set
			{
				this.SetAttributeValue("saskeyname", value);
			}
		}
		
		/// <summary>
		/// Shared Access Token
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sastoken")]
		public string SASToken
		{
			get
			{
				return this.GetAttributeValue<string>("sastoken");
			}
			set
			{
				this.SetAttributeValue("sastoken", value);
			}
		}
		
		/// <summary>
		/// Specifies schema type for event grid events
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("schematype")]
		public virtual serviceendpoint_schematype? SchemaType
		{
			get
			{
				return ((serviceendpoint_schematype?)(EntityOptionSetEnum.GetEnum(this, "schematype")));
			}
			set
			{
				this.SetAttributeValue("schematype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Unique identifier of the service endpoint.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("serviceendpointid")]
		public System.Nullable<System.Guid> ServiceEndpointId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("serviceendpointid");
			}
			set
			{
				this.SetAttributeValue("serviceendpointid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("serviceendpointid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.ServiceEndpointId = value;
			}
		}
		
		/// <summary>
		/// Unique identifier of the service endpoint.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("serviceendpointidunique")]
		public System.Nullable<System.Guid> ServiceEndpointIdUnique
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("serviceendpointidunique");
			}
		}
		
		/// <summary>
		/// Unique identifier of the associated solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionid")]
		public System.Nullable<System.Guid> SolutionId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("solutionid");
			}
		}
		
		/// <summary>
		/// Namespace of the App Fabric solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionnamespace")]
		public string SolutionNamespace
		{
			get
			{
				return this.GetAttributeValue<string>("solutionnamespace");
			}
			set
			{
				this.SetAttributeValue("solutionnamespace", value);
			}
		}
		
		/// <summary>
		/// Full service endpoint Url.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("url")]
		public string Url
		{
			get
			{
				return this.GetAttributeValue<string>("url");
			}
			set
			{
				this.SetAttributeValue("url", value);
			}
		}
		
		/// <summary>
		/// Use Auth Information in KeyVault
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("usekeyvaultconfiguration")]
		public System.Nullable<bool> UseKeyVaultConfiguration
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("usekeyvaultconfiguration");
			}
			set
			{
				this.SetAttributeValue("usekeyvaultconfiguration", value);
			}
		}
		
		/// <summary>
		/// Additional user claim value type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("userclaim")]
		public virtual serviceendpoint_userclaim? UserClaim
		{
			get
			{
				return ((serviceendpoint_userclaim?)(EntityOptionSetEnum.GetEnum(this, "userclaim")));
			}
			set
			{
				this.SetAttributeValue("userclaim", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// 1:N serviceendpoint_sdkmessageprocessingstep
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("serviceendpoint_sdkmessageprocessingstep")]
		public System.Collections.Generic.IEnumerable<PPCT.Models.Dataverse.SdkMessageProcessingStep> serviceendpoint_sdkmessageprocessingstep
		{
			get
			{
				return this.GetRelatedEntities<PPCT.Models.Dataverse.SdkMessageProcessingStep>("serviceendpoint_sdkmessageprocessingstep", null);
			}
			set
			{
				this.SetRelatedEntities<PPCT.Models.Dataverse.SdkMessageProcessingStep>("serviceendpoint_sdkmessageprocessingstep", null, value);
			}
		}
	}
}
#pragma warning restore CS1591
